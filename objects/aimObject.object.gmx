<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>aimSprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>player = 0;
gamepad_set_axis_deadzone(player, 0.2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fireKey = keyboard_check_pressed(ord("Z")) || gamepad_button_check_pressed(player, gp_shoulderrb);

//SET DEADZONE LIMIT
deadzone_limit = 0.2;

//right stick aim

if (gamepad_axis_value(0,gp_axisrv) &gt;= -deadzone_limit &amp;&amp; gamepad_axis_value(0,gp_axisrv) &lt;= deadzone_limit 
    &amp;&amp; gamepad_axis_value(0,gp_axisrh) &gt;= -deadzone_limit &amp;&amp; gamepad_axis_value(0,gp_axisrh) &lt;= deadzone_limit) {
    
    image_angle = direction;
}
else {
    hraxis = gamepad_axis_value(0, gp_axisrh);
    vraxis = gamepad_axis_value(0, gp_axisrv);
    image_angle = point_direction(0, 0, hraxis, vraxis);
    direction = image_angle; 
}

if(fireKey){
    b = instance_create(x, y, lightningObject);
}
if(gamepad_button_check_released(player, gp_shoulderrb)){
    if(instance_exists(lightningObject)){
        lightningObject.destroy = true; 
    }
}
x = Hero_Object.x; 
y = Hero_Object.y; 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
